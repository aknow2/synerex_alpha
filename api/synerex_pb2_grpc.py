# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import api.synerex_pb2 as synerex__pb2


class SynerexStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RegisterDemand = channel.unary_unary(
        '/api.Synerex/RegisterDemand',
        request_serializer=synerex__pb2.Demand.SerializeToString,
        response_deserializer=synerex__pb2.Response.FromString,
        )
    self.RegisterSupply = channel.unary_unary(
        '/api.Synerex/RegisterSupply',
        request_serializer=synerex__pb2.Supply.SerializeToString,
        response_deserializer=synerex__pb2.Response.FromString,
        )
    self.ProposeDemand = channel.unary_unary(
        '/api.Synerex/ProposeDemand',
        request_serializer=synerex__pb2.Demand.SerializeToString,
        response_deserializer=synerex__pb2.Response.FromString,
        )
    self.ProposeSupply = channel.unary_unary(
        '/api.Synerex/ProposeSupply',
        request_serializer=synerex__pb2.Supply.SerializeToString,
        response_deserializer=synerex__pb2.Response.FromString,
        )
    self.ReserveSupply = channel.unary_unary(
        '/api.Synerex/ReserveSupply',
        request_serializer=synerex__pb2.Target.SerializeToString,
        response_deserializer=synerex__pb2.ConfirmResponse.FromString,
        )
    self.ReserveDemand = channel.unary_unary(
        '/api.Synerex/ReserveDemand',
        request_serializer=synerex__pb2.Target.SerializeToString,
        response_deserializer=synerex__pb2.ConfirmResponse.FromString,
        )
    self.SelectSupply = channel.unary_unary(
        '/api.Synerex/SelectSupply',
        request_serializer=synerex__pb2.Target.SerializeToString,
        response_deserializer=synerex__pb2.ConfirmResponse.FromString,
        )
    self.SelectDemand = channel.unary_unary(
        '/api.Synerex/SelectDemand',
        request_serializer=synerex__pb2.Target.SerializeToString,
        response_deserializer=synerex__pb2.ConfirmResponse.FromString,
        )
    self.Confirm = channel.unary_unary(
        '/api.Synerex/Confirm',
        request_serializer=synerex__pb2.Target.SerializeToString,
        response_deserializer=synerex__pb2.Response.FromString,
        )
    self.SubscribeDemand = channel.unary_stream(
        '/api.Synerex/SubscribeDemand',
        request_serializer=synerex__pb2.Channel.SerializeToString,
        response_deserializer=synerex__pb2.Demand.FromString,
        )
    self.SubscribeSupply = channel.unary_stream(
        '/api.Synerex/SubscribeSupply',
        request_serializer=synerex__pb2.Channel.SerializeToString,
        response_deserializer=synerex__pb2.Supply.FromString,
        )
    self.SubscribeMbus = channel.unary_stream(
        '/api.Synerex/SubscribeMbus',
        request_serializer=synerex__pb2.Mbus.SerializeToString,
        response_deserializer=synerex__pb2.MbusMsg.FromString,
        )
    self.SendMsg = channel.unary_unary(
        '/api.Synerex/SendMsg',
        request_serializer=synerex__pb2.MbusMsg.SerializeToString,
        response_deserializer=synerex__pb2.Response.FromString,
        )
    self.CloseMbus = channel.unary_unary(
        '/api.Synerex/CloseMbus',
        request_serializer=synerex__pb2.Mbus.SerializeToString,
        response_deserializer=synerex__pb2.Response.FromString,
        )


class SynerexServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RegisterDemand(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RegisterSupply(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ProposeDemand(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ProposeSupply(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReserveSupply(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReserveDemand(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SelectSupply(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SelectDemand(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Confirm(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubscribeDemand(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubscribeSupply(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubscribeMbus(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendMsg(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CloseMbus(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SynerexServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RegisterDemand': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterDemand,
          request_deserializer=synerex__pb2.Demand.FromString,
          response_serializer=synerex__pb2.Response.SerializeToString,
      ),
      'RegisterSupply': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterSupply,
          request_deserializer=synerex__pb2.Supply.FromString,
          response_serializer=synerex__pb2.Response.SerializeToString,
      ),
      'ProposeDemand': grpc.unary_unary_rpc_method_handler(
          servicer.ProposeDemand,
          request_deserializer=synerex__pb2.Demand.FromString,
          response_serializer=synerex__pb2.Response.SerializeToString,
      ),
      'ProposeSupply': grpc.unary_unary_rpc_method_handler(
          servicer.ProposeSupply,
          request_deserializer=synerex__pb2.Supply.FromString,
          response_serializer=synerex__pb2.Response.SerializeToString,
      ),
      'ReserveSupply': grpc.unary_unary_rpc_method_handler(
          servicer.ReserveSupply,
          request_deserializer=synerex__pb2.Target.FromString,
          response_serializer=synerex__pb2.ConfirmResponse.SerializeToString,
      ),
      'ReserveDemand': grpc.unary_unary_rpc_method_handler(
          servicer.ReserveDemand,
          request_deserializer=synerex__pb2.Target.FromString,
          response_serializer=synerex__pb2.ConfirmResponse.SerializeToString,
      ),
      'SelectSupply': grpc.unary_unary_rpc_method_handler(
          servicer.SelectSupply,
          request_deserializer=synerex__pb2.Target.FromString,
          response_serializer=synerex__pb2.ConfirmResponse.SerializeToString,
      ),
      'SelectDemand': grpc.unary_unary_rpc_method_handler(
          servicer.SelectDemand,
          request_deserializer=synerex__pb2.Target.FromString,
          response_serializer=synerex__pb2.ConfirmResponse.SerializeToString,
      ),
      'Confirm': grpc.unary_unary_rpc_method_handler(
          servicer.Confirm,
          request_deserializer=synerex__pb2.Target.FromString,
          response_serializer=synerex__pb2.Response.SerializeToString,
      ),
      'SubscribeDemand': grpc.unary_stream_rpc_method_handler(
          servicer.SubscribeDemand,
          request_deserializer=synerex__pb2.Channel.FromString,
          response_serializer=synerex__pb2.Demand.SerializeToString,
      ),
      'SubscribeSupply': grpc.unary_stream_rpc_method_handler(
          servicer.SubscribeSupply,
          request_deserializer=synerex__pb2.Channel.FromString,
          response_serializer=synerex__pb2.Supply.SerializeToString,
      ),
      'SubscribeMbus': grpc.unary_stream_rpc_method_handler(
          servicer.SubscribeMbus,
          request_deserializer=synerex__pb2.Mbus.FromString,
          response_serializer=synerex__pb2.MbusMsg.SerializeToString,
      ),
      'SendMsg': grpc.unary_unary_rpc_method_handler(
          servicer.SendMsg,
          request_deserializer=synerex__pb2.MbusMsg.FromString,
          response_serializer=synerex__pb2.Response.SerializeToString,
      ),
      'CloseMbus': grpc.unary_unary_rpc_method_handler(
          servicer.CloseMbus,
          request_deserializer=synerex__pb2.Mbus.FromString,
          response_serializer=synerex__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'api.Synerex', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
